var NewComponent = React.createClass({
  render: function() {
    return (
      <div>
        <div className="text-center">
          <button type="button" className="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-semibold rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none dark:focus:outline-none dark:focus:ring-1 dark:focus:ring-gray-600" data-hs-overlay="#hs-modal-signup">
            Open modal
          </button>
        </div>
        <div id="hs-modal-signup" className="hs-overlay hidden w-full h-full fixed top-0 start-0 z-[80] overflow-x-hidden overflow-y-auto">
          <div className="hs-overlay-open:mt-7 hs-overlay-open:opacity-100 hs-overlay-open:duration-500 mt-0 opacity-0 ease-out transition-all sm:max-w-lg sm:w-full m-3 sm:mx-auto">
            <div className="bg-white border border-gray-200 rounded-xl shadow-sm dark:bg-gray-800 dark:border-gray-700">
              <div className="p-4 sm:p-7">
                <h3 className="text-lg leading-6 font-medium text-gray-900">{editingProject ? 'Edit Project' : 'Add New Project'}</h3>
                <div className="mt-5">
                  {/* Form */}
                  
                  {/* End Form */}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }
});


<div className="fixed z-10 inset-0 overflow-y-auto">
            <div className="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
              <div className="fixed inset-0 transition-opacity" aria-hidden="true">
                <div className="absolute inset-0 bg-gray-500 opacity-75"></div>
              </div>

              <span className="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

              <div className="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
                <div className="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                  <div className="sm:flex sm:items-start">
                    <div className="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                      <h3 className="text-lg leading-6 font-medium text-gray-900">{editingProject ? 'Edit Project' : 'Add New Project'}</h3>
                      <div className="mt-2">
                        <form>
                          {/* Grid */}
                          <div className="grid sm:grid-cols-10 gap-2 sm:gap-4">
                            {/* End Col */}
                            <div className="sm:col-span-2">
                              <label htmlFor="af-project-title" className="inline-block text-sm text-gray-800 mt-2.5 dark:text-gray-200">
                                Project Title
                              </label>
                            </div>
                            {/* End Col */}
                            {/* End Col */}
                            <div className="sm:col-span-8">
                              <input id="af-project-title"
                                type="text"
                                name="projectName"
                                value={newProject.project_name}
                                onChange={(e) => setNewProject({ ...newProject, project_name: e.target.value })}
                                className="py-2 px-3 pe-11 block w-full border-gray-200 border-2 shadow-sm text-sm rounded-lg focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"
                                placeholder="Project Name" />
                            </div>
                            {/* End Col */}
                            <div className="sm:col-span-2">
                              <label htmlFor="af-description" className="inline-block text-sm text-gray-800 mt-2.5 dark:text-gray-200">
                                Description
                              </label>
                            </div>
                            {/* End Col */}
                            <div className="sm:col-span-8">
                              <textarea id="af-description"
                                className="py-2 px-3 block w-full border-gray-200 border-2 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"
                                rows={2}
                                placeholder="Project Description"
                                name="description"
                                value={newProject.description}
                                onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}
                              />
                            </div>
                            {/* End Col */}
                            <div className="sm:col-span-2">
                              <label htmlFor="af-description" className="inline-block text-sm text-gray-800 mt-2.5 dark:text-gray-200">
                                Start Date
                              </label>
                            </div>
                            {/* End Col */}
                            <div className="sm:col-span-8">
                              <input
                                type="date"
                                className="py-2 px-3 pe-11 block w-full border-gray-200 border-2 shadow-sm text-sm rounded-lg focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"
                                name="startDate"
                                value={newProject.start_date}
                                onChange={(e) => setNewProject({ ...newProject, start_date: e.target.value })}
                              />
                            </div>
                            {/* End Col */}
                            <div class="sm:col-span-2">
                              <label htmlFor="af-account-full-name" class="inline-block text-sm text-gray-800 mt-2.5 dark:text-gray-200">
                                Employee Name
                              </label>
                            </div>
                            {/* End Col */}
                            <div class="sm:col-span-8">
                              <div class="sm:flex">
                                <input id="af-account-full-name"
                                  type="text"
                                  class="py-2 px-3 pe-11 block w-full border-2 shadow-sm -mt-px -ms-px first:rounded-t-lg last:rounded-b-lg sm:first:rounded-s-lg sm:mt-0 sm:first:ms-0 sm:first:rounded-se-none sm:last:rounded-es-none sm:last:rounded-e-lg text-sm relative focus:z-10 focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"
                                  placeholder="Vishal"
                                  name="firstName"
                                  value={newProject.employee_name}
                                  onChange={(e) => setNewProject({ ...newProject, employee_name: e.target.value })} />
                                <input
                                  type="text"
                                  class="py-2 px-3 pe-11 block w-full border-2 shadow-sm -mt-px -ms-px first:rounded-t-lg last:rounded-b-lg sm:first:rounded-s-lg sm:mt-0 sm:first:ms-0 sm:first:rounded-se-none sm:last:rounded-es-none sm:last:rounded-e-lg text-sm relative focus:z-10 focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"
                                  placeholder="Singh"
                                  value={newProject.employee_name}
                                  onChange={(e) => setNewProject({ ...newProject, employee_name: e.target.value })} />
                              </div>
                            </div>
                            {/* End Col */}
                            <div className="sm:col-span-2">
                              <label htmlFor="af-project-title" className="inline-block text-sm text-gray-800 mt-2.5 dark:text-gray-200">
                                Designation
                              </label>
                            </div>
                            {/* End Col */}
                            <div className="sm:col-span-8">
                              <input id="af-project-title"
                                type="text"
                                name="designation"
                                value={newProject.designation}
                                onChange={(e) => setNewProject({ ...newProject, designation: e.target.value })}
                                className="py-2 px-3 pe-11 block w-full border-gray-200 border-2 shadow-sm text-sm rounded-lg focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"
                                placeholder="Designation" />
                            </div>
                            {/* End Col */}
                          </div>
                          {/* End Grid */}

                        </form>
                        {/* Add other input fields for project details */}
                      </div>
                    </div>
                  </div>
                </div>
                <div className="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                  <button
                    onClick={handleSaveProject}
                    className="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm"
                  >
                    Save
                  </button>
                  <button
                    onClick={() => setShowModal(false)}
                    className="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"
                  >
                    Cancel
                  </button>
                </div>
              </div>
            </div>
          </div>